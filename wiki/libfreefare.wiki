#summary Library for high level manipulation of MIFARE cards.
#labels Featured,Phase-Support

= Introduction =

The _libfreefare_ project aims to provide a convenient API for MIFARE card manipulations.

= Feature matrix =
== Tags ==
|| MIFARE Classic 1k || Supported ||
|| MIFARE Classic 4k || Supported ||
|| MIFARE DESFire 2k || Supported ||
|| MIFARE DESFire 4k || Supported ||
|| MIFARE DESFire 8k || Supported ||
|| MIFARE DESFire EV1 || In trunk ||
|| MIFARE Mini || Not supported (no hardware) ||
|| MIFARE Plus S 2k || Not supported (no hardware) ||
|| MIFARE Plus S 4k || Not supported (no hardware) ||
|| MIFARE Plus X 2k || Not supported (no hardware) ||
|| MIFARE Plus X 4k || Not supported (no hardware) ||
|| MIFARE Ultralight || Supported ||
|| MIFARE UltralightC || In trunk ||

== Specifications ==
|| Mifare Application Directory (MAD) v1 || Supported ||
|| Mifare Application Directory (MAD) v2 || Supported ||
|| Mifare Application Directory (MAD) v3 || Supported (part of Mifare DESFire support) ||

= Installation =
You can use released version (see *Download* section) or development version:

First you have to checkout sources:
{{{
svn checkout http://nfc-tools.googlecode.com/svn/trunk/libfreefare
cd libfreefare
}}}

Before compile it, remember to run 
{{{
autoreconf -vis
}}}

Once fetched, you can now compile *libfreefare* using usual autotools way:

{{{
./configure --prefix=/usr
make
sudo make install
}}}

= Debug =
In order to debug using gdb, you need to compile with some CFLAGS:
{{{
CFLAGS="-g -Wall -pedantic -O0 -ggdb" ./configure --prefix=/usr
make clean all
}}}

To simply view transfer trace between PCD and PICC:
{{{
./configure --enable-debug
make clean all
}}}

To debug an example (e.g. mifare-classic-write-ndef), you need to run the following command:
{{{
libtool --mode=execute gdb examples/mifare-classic-write-ndef
}}}